NodeJs :
    - JS runtime environment ( execute JS code outside the browser)
    - NodeJs is C++ program and needs V8 engine to understand JS code that’s why you will find V8 folder in dependencies 
    - NodeJs is C++ program so you can combine between features in JS and Features inC++
    - Lib folder in dependencies help developers to access C++ features from JS 
    - In NodeJs you don’t have access to web Api

Modules :
    A module is an encapsulated and reusable chunk of code that has its own context
    In Node.js, each file is treated as a separate module
    Types of Modules :
        1.Local modules - Modules that we create in our application
        2.Built-in modules - Modules that Node.js ships with out of the box
        3.Third party modules - Modules written by other developers that we can use in our application

Require (commonJs Format) : 
    require() is a built-in function to include external modules that exist in separate files. 
    require() statement basically reads a JavaScript file, executes it , 
    and return the exports object. ( require("./add.js") has the value of module.exports = add; in add.js file )
    * if you add exports.add = add; this like export in ES6
    * if you add module.exports = add; this like export default ES6

Module Scope :
    Each loaded module in Node.js is wrapped with an IIFE that provides private scoping of code
    IIFE allows you to repeat variable or function names without any conflicts 
    (batman.js and superman.js has same variable name (superhero) and no conflict when we used require in index.js)
    * under the hood when you write require("./batman") and require("./superman") in index.js
    node will wrap then with IIFE ( you can see exp. of wrapping like in iife.js)
    * under the hood node inject 5 arguments (exports, require, module,__filename,__dirname ) when wrap module by iife


